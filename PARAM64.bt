//------------------------------------------------
//--- 010 Editor v9.0.1 Binary Template
//
//      File: PARAM64.bt
//   Authors: TKGP
//   Version: 
//   Purpose: DS3/Sekiro .param
//  Category: 
// File Mask: 
//  ID Bytes: 
//   History: 
//------------------------------------------------

typedef struct {
    quad stringsStart <format=hex>;
    short unk08;
    ushort rowCount;
    int unk0C;
    quad idOffset <format=hex>;
    int unk18;
    int unk1C;
    int unk20;
    int unk24;
    int unk28;
    int unk2C;
    quad dataStart <format=hex>;
    int unk38;
    int unk3C;
    
    local quad pos <hidden=true> = FTell();
    FSeek(idOffset);
    string id;
    FSeek(pos);
} Header <read=ReadHeader, bgcolor=cLtRed>;

wstring ReadHeader(Header& header) {
    return header.id;
}


typedef struct {
    quad id;
    quad dataOffset <format=hex>;
    quad nameOffset <format=hex>;
    
    local quad pos <hidden=true> = FTell();
    FSeek(nameOffset);
    if (nameOffset == 0) {
        local wstring name = "";
    } else {
        wstring name;
    }
    FSeek(dataOffset);
    byte data <bgcolor=cBlack, fgcolor=cWhite>;
    FSeek(pos);
} Row <read=ReadRow, bgcolor=cLtGreen, optimize=false>;

string ReadRow(Row& row) {
    string str;
    SPrintf(str, "%10i \"%s\"", row.id, row.name);
    return str;
}


Header header;
struct { Row rows[header.rowCount]; } rows;