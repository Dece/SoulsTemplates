//------------------------------------------------
//--- 010 Editor v9.0.1 Binary Template
//
//      File: 
//   Authors: 
//   Version: 
//   Purpose: 
//  Category: 
// File Mask: 
//  ID Bytes: 
//   History: 
//------------------------------------------------

typedef struct {
    char magic[4]; Assert(magic == "CLM2");
    int unk04; Assert(unk04 == 0);
    short unk08; Assert(unk08 == 1);
    short unk0A; Assert(unk0A == 1);
    int unk0C; Assert(unk0C == 0);
    int unk10; Assert(unk10 == 0);
    int count;
    int unk18; Assert(unk18 == 0x28);
    int unk1C; Assert(unk1C == 0);
    int unk20; Assert(unk20 == 0);
    int unk24; Assert(unk24 == 0x28);
} Header <bgcolor=cLtRed>;


typedef struct {
    int unk00; Assert(unk00 == 0);
    int count;
    int offset;
    int unk0C; Assert(unk0C == 0);
    
    if (count > 0) {
        local quad pos <hidden=true> = FTell();
        FSeek(offset);
        struct {
            short unk00;
            short unk02;
        } indices[count] <bgcolor=cAqua>;
        FSeek(pos);
    }
} Entry <bgcolor=cLtGreen, optimize=false>;


Header header;
Entry entries[header.count];